variables: stages: - build-gradle - build-docker - push-docker - terraform-creating - cli build-gradle: image: gradle:jdk11 stage: build-gradle before_script: - export GRADLE_USER_HOME=`pwd`/.gradle script: - ./gradlew assemble check cache: key: "$CI_COMMIT_REF_NAME" paths: - .gradle artifacts: paths: - build/libs/*.jar build-docker: image: docker:latest stage: build-docker services: - docker:dind before_script: - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY script: - docker build --pull -t image1:tag1 -t image2:tag2 . push-docker: image: docker:latest stage: push-docker services: - docker:dind before_script: - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY script: - docker push image1:tag1 - docker push image2:tag2 terraform-creating: image: name: hashicorp/terraform:light entrypoint: [ "" ] stage: terraform-creating script: - cd /folder/test - terraform init -backend-config="init1=init_val_1" -backend-config="init2=init_val_2" -reconfigure -input=false - terraform validate - terraform plan -var="plan1=plan1" -var="plan2=plan2" -input=false - terraform apply -auto-approve -input=false cli: image: nginx:latest stage: cli script: - | apt get install npm yarm nano sudo
